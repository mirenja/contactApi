name: Cloud Function Deployment

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  FRONTEND_ORIGIN: ${{ secrets.FRONTEND_ORIGIN }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  FUNCTION_ZIP_NAME: ${{ secrets.FUNCTION_ZIP_NAME }}
  

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Write backend config
        run: |
          echo -e "organization = \"${{ secrets.TFC_ORG }}\"\nworkspaces {\n  name = \"${{ secrets.TFC_WORKSPACE }}\"\n}" > terraform-gcp-cloudfunctions/backend.hcl

      - name: Check if GCS bucket exists and import if needed
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          BUCKET_NAME="${{ secrets.GCP_PROJECT_ID }}-function-source"
          
          if gsutil ls -b gs://$BUCKET_NAME >/dev/null 2>&1; then
            echo "Bucket exists, importing into Terraform state"
            terraform import google_storage_bucket.function_source $BUCKET_NAME || echo "Import failed or already imported, continuing"
          else
            echo "Bucket does not exist, no import needed"
          fi

      - name: Initialize Terraform
        run: terraform init -input=false -backend-config=backend.hcl
        working-directory: ./terraform-gcp-cloudfunctions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform-gcp-cloudfunctions

      - name: Terraform Plan
        run: terraform plan -input=false -var="project_id=$PROJECT_ID" -var="region=$REGION" -var="frontend_origin=$FRONTEND_ORIGIN" -var="mongodb_uri=$MONGODB_URI"  -var="function_zip_name=${{ env.FUNCTION_ZIP_NAME }}" -var="function_zip_path=${GITHUB_WORKSPACE}/${{ env.FUNCTION_ZIP_NAME }}"
        working-directory: ./terraform-gcp-cloudfunctions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="project_id=$PROJECT_ID" -var="region=$REGION" -var="frontend_origin=$FRONTEND_ORIGIN" -var="mongodb_uri=$MONGODB_URI" -var="frontend_origin=$FRONTEND_ORIGIN" -var="mongodb_uri=$MONGODB_URI"  -var="function_zip_name=${{ env.FUNCTION_ZIP_NAME }}" -var="function_zip_path=${GITHUB_WORKSPACE}/${{ env.FUNCTION_ZIP_NAME }}"
        working-directory: ./terraform-gcp-cloudfunctions
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
